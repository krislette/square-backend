##
This is a multiline comment
and below is a model.
##
mod student [
    id: str.
    name: str.
    age: int.
    block: str.
    gpa: float.
]


# Batch update feature for the model
fun demo_four() -> void [
    # Initializing a variable of type `student` (from model)
    rosales: student = ["2022", "acelle", 18, "3-5", 1.00].

    # Batch updating some variables on studet `rosales`
    rosales.[age, block] = [19, "3-1N"].
]


# Function to demonstrate different operators
fun demo_three() -> void [
    return (5.0 - 1.0 * (8.0 / 4.0)) > 10.0 % 3.0 ** 6.0.
]


# FizzBuzz implementation in Square
fun demo_two() -> void [
    loop i: int in range(0, 20, i++) [
        when [
            i % 3 == 0 && i % 5 == 0 :: [
                print("FizzBuzz").
            ]
            i % 3 == 0 :: [
                print("Fizz").
            ]
            i % 5 == 0 :: [
                print("Buzz")
            ]
        ]
    ] 
]


# A function to showcase a loop with a conditional
fun demo_one() -> void [
    counter: int = 5.
    loop [
        print("Hello from the square team!").
        when counter [
            == 5 :: exit.
        ]
    ]
]


# Main driver 
fun main() -> void [
    print("This is a sample program for Square.").

    # Function call for loop demo
    demo_one().

    # Function call for conditional demo
    demo_two().

    # Function call for operator demo
    demo_three().

    # Function call for model demo
    demo_four().
] 
